==11308== Memcheck, a memory error detector
==11308== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11308== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==11308== Command: ./fdf my_map.fdf
==11308== Parent PID: 17143
==11308== 
==11308== error calling PR_SET_PTRACER, vgdb might block
==11308== 
==11308== HEAP SUMMARY:
==11308==     in use at exit: 5 bytes in 1 blocks
==11308==   total heap usage: 115 allocs, 114 frees, 6,892 bytes allocated
==11308== 
==11308== 5 bytes in 1 blocks are still reachable in loss record 1 of 1
==11308==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==11308==    by 0x10BDDA: ft_substr (in /home/byulbyul/edu/42abudhabi/common_core/my_fdf/fdf)
==11308==    by 0x10A6BB: clean_buff (in /home/byulbyul/edu/42abudhabi/common_core/my_fdf/fdf)
==11308==    by 0x10A9C4: get_next_line (in /home/byulbyul/edu/42abudhabi/common_core/my_fdf/fdf)
==11308==    by 0x10963A: init_cells (initializator.c:43)
==11308==    by 0x10977D: init_data (initializator.c:74)
==11308==    by 0x10937B: fdf (fdf.c:44)
==11308==    by 0x109233: main (main.c:17)
==11308== 
==11308== LEAK SUMMARY:
==11308==    definitely lost: 0 bytes in 0 blocks
==11308==    indirectly lost: 0 bytes in 0 blocks
==11308==      possibly lost: 0 bytes in 0 blocks
==11308==    still reachable: 5 bytes in 1 blocks
==11308==         suppressed: 0 bytes in 0 blocks
==11308== 
==11308== For lists of detected and suppressed errors, rerun with: -s
==11308== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
